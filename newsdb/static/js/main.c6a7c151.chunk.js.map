{"version":3,"sources":["about.js","imageformat.js","news.js","services.js","App.js","serviceWorker.js","index.js"],"names":["About","react_default","a","createElement","className","href","Component","ImageFormat","props","src","imgurl","alt","API_KEY","BASE_URL","cookieService","CookieService","Object","classCallCheck","this","setCookie","bind","getCookie","cookieType","cookieValue","d","Date","setTime","getTime","numDays","expires","toUTCString","document","cookie","name","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","_this","possibleConstructorReturn","getPrototypeOf","call","state","apiKey","articles","defaultCategory","criteria","getNews","assertThisInitialized","searchClick","handleChange","e","setState","target","value","mainCategory","_this2","fetch","then","response","json","data","catch","error","alert","ref","type","placeholder","onChange","onClick","map","article","index","key","url","src_imageformat","urlToImage","title","description","source","dist_default","format","publishedAt","App","BrowserRouter","Link","to","Route","exact","path","component","News","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c6a7c151.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nclass About extends Component {\r\n  render() {\r\n    return  <div className=\"about-page\">\r\n                <h2>About The News Room!</h2>\r\n                <p>The News Room was created as a school project for the BCIT TWD program in Vancouver Canada by Alex Engel. I am an aspiring future Web Developer currently enrolled in BCIT's Technical Web Designer Program. I have the hope to become a freelance Full Stack Web Developer so I can combine my love of travel with my interests in technology and design.</p>\r\n                <p>Credit to <a href=\"https://newsapi.org\">News API!</a> </p>\r\n            </div>; \r\n  } \r\n}\r\nexport default About;\r\n","import React from 'react';\r\nimport './imageformat.css'\r\nconst ImageFormat = (props) => {\r\n    // Define data here.\r\n\r\n    return (\r\n        <div>\r\n            <img className=\"image-resize\" src={props.imgurl} alt=\"news\"></img>\r\n        </div>);\r\n}\r\nexport default ImageFormat;\r\n","import React, { Component } from 'react';\r\nimport Moment from 'react-moment';\r\nimport ImageFormat from './imageformat';\r\nimport CookieService from './services';\r\n\r\nconst API_KEY   = '0b177b12653a453e9f7233c56cacd686';\r\nconst BASE_URL  = 'https://newsapi.org/v2/everything?sortBy=publishedAt&apiKey='\r\n                + API_KEY + \"&q=\";\r\nconst MAIN_CATEGORY = \"mainNewsCategory\";\r\nconst cookieService = new CookieService();\r\n\r\nclass About extends Component {\r\n\r\nconstructor() {\r\n    super();\r\n    this.state  = {\r\n      apiKey : API_KEY,\r\n      articles : [],\r\n      defaultCategory: 'tacos',\r\n      criteria: 'tacos',\r\n      imgurl: '../media/earth.png'\r\n    };\r\n\r\n    // Register functions of the class.\r\n    this.getNews = this.getNews.bind(this);\r\n    this.searchClick = this.searchClick.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n}\r\n\r\nhandleChange(e){\r\n    this.setState({ criteria: e.target.value })\r\n}\r\n\r\nsearchClick(e) {\r\n    if(this.state.criteria !== ''){\r\n        this.getNews(this.state.criteria);\r\n        cookieService.setCookie(MAIN_CATEGORY, this.state.criteria);\r\n    }\r\n}\r\n\r\n// Called when constructor is finished building component.\r\ncomponentDidMount() {\r\n    // Set main category from cookie if it does not exist.\r\n    let mainCategory = cookieService.getCookie(MAIN_CATEGORY);\r\n    if(mainCategory === null) {\r\n        cookieService.setCookie(MAIN_CATEGORY, this.state.criteria);\r\n        mainCategory = this.state.criteria;\r\n    }\r\n    this.getNews(mainCategory);\r\n    // this.searchClick();\r\n}\r\n\r\ngetNews(criteria) { \r\n   \r\n        const URL        = BASE_URL + criteria;\r\n        // Request and wait for data from remote server.\r\n        fetch(URL).then(response => response.json())\r\n            // Data retrieved so parse it.\r\n            .then((data) => {\r\n                // alert(JSON.stringify(data));\r\n                this.setState({articles:data.articles});\r\n            })\r\n            // Data is not retieved.\r\n            .catch((error) => {\r\n                alert(error);\r\n            });                 \r\n}   \r\n\r\n\r\n  render() {\r\n    return  <div>\r\n                <div className=\"search-container\">\r\n                    <div className=\"search-box\">\r\n\t\t        \t\t<input ref=\"search\" type=\"search\" placeholder=\"Search criteria\" onChange={this.handleChange} />\r\n\t\t        \t\t<button onClick={this.searchClick}>Go</button>\r\n\t\t        \t</div>\r\n                </div>\r\n                <ul className=\"news-articles\">\r\n                {this.state.articles.map((article, index) => (\r\n                    <li className=\"news-content\" key={index}> \r\n                        <a href={article.url}>\r\n                        {/* See  https://newsapi.org/ for more properties */}\r\n                        \r\n                        <ImageFormat imgurl={article.urlToImage}/>\r\n                        <h3>{article.title}</h3></a>\r\n                        <p>{article.description}</p>\r\n                        <br/>\r\n                        <div className=\"source-date\">\r\n                            <a href={article.source.name}>By: {article.source.name}</a>\r\n                            <br/>\r\n                            <Moment className=\"date\" format=\"DD/MM/YYYY  HH:mma\" >\r\n                            {article.publishedAt}</Moment> \r\n                        </div>\r\n                    </li>\r\n                ))}  \r\n                </ul>\r\n                <div className=\"footer\">\r\n                    <footer>\r\n                        <p>Alex Engel 2019 | BCIT TWD | Credit to: <a href=\"newsapi.org \">newsapi.org</a>  </p>\r\n                    </footer>\r\n                </div>\r\n            </div>; \r\n\r\n  }\r\n\r\n}\r\nexport default About;\r\n//urlToImage\r\n//https://cdn.apartmenttherapy.info/image/fetch/q_60,w_1024,c_fit/https://s3.amazonaws.com/pixtruder/original_images/b585c93cbe04e97844f4b64a59faf57051d4f424","class CookieService {\r\n  constructor(){\r\n    this.setCookie = this.setCookie.bind(this);\r\n    this.getCookie = this.getCookie.bind(this);\r\n\r\n  }\r\n  // ** This function does not need to be changed. **\r\n// Set cookie that expires 1000 days from now.\r\n// This can store the user's prefered news category.\r\nsetCookie(cookieType, cookieValue) {\r\n  var numDays = 1000;\r\n  var d = new Date();\r\n  d.setTime(d.getTime() + (numDays*24*60*60*1000));\r\n  var expires = \"expires=\"+ d.toUTCString();\r\n  document.cookie = cookieType + \"=\" + cookieValue \r\n                  + \";\" + expires + \";path=/\";\r\n}\r\n\r\n// ** This function does not need to be changed. **\r\n// Get category from cookie if one exists.\r\ngetCookie(cookieType) {\r\n  var name = cookieType + \"=\";\r\n  var decodedCookie = decodeURIComponent(document.cookie);\r\n  var ca = decodedCookie.split(';');\r\n  for(var i = 0; i <ca.length; i++) {\r\n    var c = ca[i];\r\n    while (c.charAt(0) === ' ') {\r\n      c = c.substring(1);\r\n    }\r\n    if (c.indexOf(name) === 0) {\r\n      // Cookie found.\r\n      return c.substring(name.length, c.length);\r\n    }\r\n  }\r\n  return null;\r\n}\r\n}\r\nexport default CookieService;","import React from 'react';\nimport { BrowserRouter as Router, Route, Link} \n                    from \"react-router-dom\";\nimport About from \"./about\";\nimport News from \"./news\";\n\nclass App extends React.Component { \n    \n\n    render() {\n        return (   \n            <Router>      \n            <div className=\"wrapper\">\n                <div className=\"nav\">\n                <h1>The News Room</h1>\n                    <ul className=\"nav-links\">\n                        <li><Link to=\"/\">News</Link></li>\n                        <li><Link to=\"/about\">About</Link></li>\n                    </ul>\n                </div>\n                <Route exact path=\"/\" component={News} />\n                <Route exact path=\"/about\" component={About} />\n\n            </div> \n            </Router>);    \n    }\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}